// –ü–†–û–°–¢–û–ô –†–ê–ë–û–ß–ò–ô –°–ö–†–ò–ü–¢ –î–õ–Ø –°–õ–û–¢–ê
let isSpinning = false;
let slotSound = null;

function initAudio() {
    if (slotSound) return;
    
    try {
        slotSound = new Audio('sounds/slot-sound.mp3');
        slotSound.preload = 'auto';
        slotSound.volume = 0.7;
    } catch (error) {
        console.log('Audio init error:', error);
    }
}

function spinSlots() {
    if (isSpinning) return;
    
    // –í–ö–õ–Æ–ß–ê–ï–ú –ê–£–î–ò–û –ü–†–ò –ü–ï–†–í–û–ú –ö–õ–ò–ö–ï
    if (!slotSound) {
        initAudio();
    }
    
    isSpinning = true;
    const slots = document.querySelectorAll('.slot');
    const spinButton = document.querySelector('.spin-button');
    
    // –ó–í–£–ö
    playSlotSound();
    
    spinButton.disabled = true;
    spinButton.style.opacity = '0.7';
    spinButton.querySelector('span').textContent = '–ö–†–£–¢–ò–¢–°–Ø...';
    
    const images = ['images/slot1.jpeg', 'images/slot2.jpg', 'images/slot3.gif'];
    let completedSlots = 0;
    const finalImages = [];
    
    slots.forEach((slot, index) => {
        let spins = 0;
        const maxSpins = 10 + Math.floor(Math.random() * 10);
        const img = slot.querySelector('.slot-image');
        
        const spinInterval = setInterval(() => {
            const randomImage = images[Math.floor(Math.random() * images.length)];
            img.src = randomImage;
            spins++;
            
            if (spins >= maxSpins) {
                clearInterval(spinInterval);
                
                setTimeout(() => {
                    const finalImage = images[Math.floor(Math.random() * images.length)];
                    img.src = finalImage;
                    finalImages[index] = finalImage;
                    
                    completedSlots++;
                    if (completedSlots === slots.length) {
                        finishSpin(finalImages);
                    }
                }, 300);
            }
        }, 100);
    });
}

function playSlotSound() {
    if (!slotSound) return;
    
    try {
        slotSound.currentTime = 0;
        slotSound.play().catch(e => {
            console.log('Audio play failed:', e);
        });
    } catch (error) {
        console.log('Sound error:', error);
    }
}

function finishSpin(finalImages) {
    isSpinning = false;
    const spinButton = document.querySelector('.spin-button');
    
    // –ü–†–û–í–ï–†–ö–ê –ù–ê –í–´–ò–ì–†–´–®
    const allSame = finalImages.every(img => img === finalImages[0]);
    
    setTimeout(() => {
        if (allSame) {
            showWinMessage();
        } else {
            showLoseMessage();
        }
        
        spinButton.disabled = false;
        spinButton.style.opacity = '1';
        spinButton.querySelector('span').textContent = '–ö–†–£–¢–ò–¢–¨ –°–õ–û–¢!';
    }, 500);
}

function showWinMessage() {
    const messages = [
        "üéâ –í–´ –í–´–ò–ì–†–ê–õ–ò! –ú–ï–°–Ø–ß–ù–´–ô –ó–ê–ü–ê–° –≠–ù–ï–†–ì–ï–¢–ò–ö–û–í –í–ê–®! üéâ",
        "üî• –£–î–ê–ß–ê –ù–ê –¢–í–û–ï–ô –°–¢–û–†–û–ù–ï! –ó–ê–ë–ò–†–ê–ô –ü–†–ò–ó! üî•",
        "üí∏ –î–ñ–ï–ö–ü–û–¢! –ú–ï–õ–õ–°–¢–†–û–ô –ì–û–†–î–ò–¢–°–Ø –¢–û–ë–û–ô! üí∏"
    ];
    
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ø–∞–ø—ã
    const existingPopup = document.querySelector('.win-popup, .lose-popup');
    if (existingPopup) {
        existingPopup.remove();
    }
    
    const winPopup = document.createElement('div');
    winPopup.className = 'win-popup';
    winPopup.innerHTML = `
        <div style="margin-bottom: 15px;">${randomMessage}</div>
        <div style="font-size: 0.8em; margin-top: 15px;">"–ö–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è, –ª–∏–±–æ –ø–∞–Ω, –ª–∏–±–æ –ø—Ä–æ–ø–∞–ª!"</div>
        <button class="popup-button" onclick="this.parentElement.remove()">–û—Ç–¥–∞—Ç—å –º–µ–ª–ª—Å—Ç—Ä–æ—é</button>
    `;
    
    document.body.appendChild(winPopup);
}

function showLoseMessage() {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ø–∞–ø—ã
    const existingPopup = document.querySelector('.win-popup, .lose-popup');
    if (existingPopup) {
        existingPopup.remove();
    }
    
    const losePopup = document.createElement('div');
    losePopup.className = 'lose-popup';
    losePopup.innerHTML = `
        <div style="margin-bottom: 15px;">üòû –í –°–õ–ï–î–£–Æ–©–ò–ô –†–ê–ó –ü–û–í–ï–ó–ï–¢! üòû</div>
        <div style="font-size: 0.8em; margin-top: 15px;">"–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ - —É–¥–∞—á–∞ –ª—é–±–∏—Ç —Å–º–µ–ª—ã—Ö!"</div>
        <button class="popup-button" onclick="this.parentElement.remove()">–ó–∞–∫—Ä—ã—Ç—å</button>
    `;
    
    document.body.appendChild(losePopup);
}

// –ü–†–û–°–¢–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
document.addEventListener('DOMContentLoaded', function() {
    console.log("üíä MELLSTROY ENERGY - –°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!");
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ
    initAudio();
    
    // –í–∫–ª—é—á–∞–µ–º –∞—É–¥–∏–æ –ø—Ä–∏ –ª—é–±–æ–º –∫–ª–∏–∫–µ
    document.addEventListener('click', function() {
        if (!slotSound) {
            initAudio();
        }
    }, { once: true });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
window.showWinMessage = showWinMessage;
window.showLoseMessage = showLoseMessage;

