// –£–ª—É—á—à–µ–Ω–Ω—ã–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–ª–æ—Ç–æ–≤
let isSpinning = false;
let slotSound = null;
let audioEnabled = false;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤–∫–ª—é—á–µ–Ω–∏—è –∞—É–¥–∏–æ
function initAudio() {
    if (slotSound) return;
    
    try {
        slotSound = new Audio('sounds/slot-sound.mp3');
        slotSound.preload = 'auto';
        slotSound.volume = 0.7;
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞—É–¥–∏–æ
        const AudioContext = window.AudioContext || window.webkitAudioContext;
        if (AudioContext) {
            const audioContext = new AudioContext();
            if (audioContext.state === 'suspended') {
                audioContext.resume();
            }
        }
    } catch (error) {
        console.log('Audio initialization error:', error);
    }
}

function enableAudio() {
    if (audioEnabled) return;
    
    initAudio();
    audioEnabled = true;
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∏ —Å—Ä–∞–∑—É –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
    if (slotSound) {
        const playPromise = slotSound.play();
        if (playPromise !== undefined) {
            playPromise.then(() => {
                slotSound.pause();
                slotSound.currentTime = 0;
            }).catch(e => {
                console.log('Audio unlock failed:', e);
            });
        }
    }
}

function spinSlots() {
    if (isSpinning) return;
    
    // –í–∫–ª—é—á–∞–µ–º –∞—É–¥–∏–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∫–ª–∏–∫–µ
    if (!audioEnabled) {
        enableAudio();
    }
    
    isSpinning = true;
    const slots = document.querySelectorAll('.slot');
    const spinButton = document.querySelector('.spin-button');
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
    playSlotSound();
    
    spinButton.disabled = true;
    spinButton.style.opacity = '0.7';
    spinButton.querySelector('span').textContent = '–ö–†–£–¢–ò–¢–°–Ø...';
    
    const images = ['images/slot1.jpeg', 'images/slot2.jpg', 'images/slot3.gif'];
    let completedSlots = 0;
    
    slots.forEach((slot, index) => {
        let spins = 0;
        const maxSpins = 10 + Math.floor(Math.random() * 10);
        const img = slot.querySelector('.slot-image');
        
        const spinInterval = setInterval(() => {
            const randomImage = images[Math.floor(Math.random() * images.length)];
            img.src = randomImage;
            img.alt = `–°–ª–æ—Ç ${spins + 1}`;
            spins++;
            
            if (spins >= maxSpins) {
                clearInterval(spinInterval);
                
                setTimeout(() => {
                    const finalImage = images[Math.floor(Math.random() * images.length)];
                    img.src = finalImage;
                    
                    completedSlots++;
                    if (completedSlots === slots.length) {
                        finishSpin();
                    }
                }, 300);
            }
        }, 100);
    });
}

function playSlotSound() {
    if (!slotSound || !audioEnabled) {
        console.log('Sound not ready, trying to enable...');
        enableAudio();
        return;
    }
    
    try {
        slotSound.currentTime = 0;
        const playPromise = slotSound.play();
        
        if (playPromise !== undefined) {
            playPromise.catch(e => {
                console.log('Audio play failed:', e);
                // –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à–æ–π –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫
                setTimeout(() => {
                    if (slotSound) {
                        slotSound.play().catch(e => console.log('Retry failed:', e));
                    }
                }, 100);
            });
        }
    } catch (error) {
        console.log('Sound error:', error);
    }
}

function finishSpin() {
    isSpinning = false;
    const spinButton = document.querySelector('.spin-button');
    
    setTimeout(() => {
        showWinMessage();
        spinButton.disabled = false;
        spinButton.style.opacity = '1';
        spinButton.querySelector('span').textContent = '–ö–†–£–¢–ò–¢–¨ –°–õ–û–¢!';
    }, 500);
}

function showWinMessage() {
    const messages = [
        "üéâ –í–´ –í–´–ò–ì–†–ê–õ–ò! –ú–ï–°–Ø–ß–ù–´–ô –ó–ê–ü–ê–° –≠–ù–ï–†–ì–ï–¢–ò–ö–û–í –í–ê–®! üéâ",
        "üî• –£–î–ê–ß–ê –ù–ê –¢–í–û–ï–ô –°–¢–û–†–û–ù–ï! –ó–ê–ë–ò–†–ê–ô –ü–†–ò–ó! üî•",
        "üí∏ –î–ñ–ï–ö–ü–û–¢! –ú–ï–õ–õ–°–¢–†–û–ô –ì–û–†–î–ò–¢–°–Ø –¢–û–ë–û–ô! üí∏",
        "üöÄ –í–´ –°–æ—Ä–≤–∞–ª–∏ –ö—É—à! –≠–Ω–µ—Ä–≥–∏—è –±—å–µ—Ç –∫–ª—é—á–æ–º! üöÄ"
    ];
    
    const randomMessage = messages[Math.floor(Math.random() * messages.length)];
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ø–∞–ø—ã
    const existingPopup = document.querySelector('.win-popup');
    if (existingPopup) {
        existingPopup.remove();
    }
    
    const winPopup = document.createElement('div');
    winPopup.className = 'win-popup';
    winPopup.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: linear-gradient(45deg, #ffd700, #ffed4e);
        color: #000;
        padding: 30px;
        border-radius: 20px;
        border: 5px solid #000;
        font-size: 1.5em;
        font-weight: bold;
        text-align: center;
        z-index: 10000;
        box-shadow: 0 0 50px rgba(255,215,0,0.8);
        font-family: 'Press Start 2P', cursive;
        max-width: 80vw;
        word-wrap: break-word;
    `;
    
    winPopup.innerHTML = `
        <div style="margin-bottom: 15px;">${randomMessage}</div>
        <div style="font-size: 0.8em; margin-top: 15px;">"–ö–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è, –ª–∏–±–æ –ø–∞–Ω, –ª–∏–±–æ –ø—Ä–æ–ø–∞–ª!"</div>
        <button onclick="this.parentElement.remove()" style="
            margin-top: 20px;
            padding: 10px 20px;
            background: #000;
            color: #ffd700;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-family: 'Press Start 2P', cursive;
            font-size: 0.7em;
        ">–û—Ç–¥–∞—Ç—å –º–µ–ª–ª—Å—Ç—Ä–æ—é</button>
    `;
    
    document.body.appendChild(winPopup);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log("üíä MELLSTROY ENERGY - –°–∞–π—Ç –∑–∞–≥—Ä—É–∂–µ–Ω!");
    
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É–¥–∏–æ
    initAudio();
    
    // –í–∫–ª—é—á–∞–µ–º –∞—É–¥–∏–æ –ø—Ä–∏ –ª—é–±–æ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏
    const enableAudioOnInteraction = () => {
        if (!audioEnabled) {
            enableAudio();
        }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
    ['click', 'touchstart', 'keydown', 'scroll'].forEach(event => {
        document.addEventListener(event, enableAudioOnInteraction, { 
            once: true,
            passive: true 
        });
    });
    
    // –£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.webkitOverflowScrolling = 'touch';
    
    // –§–∏–∫—Å –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞
    let touchStartY = 0;
    
    document.addEventListener('touchstart', function(e) {
        touchStartY = e.touches[0].clientY;
    }, { passive: true });
    
    document.addEventListener('touchmove', function(e) {
        // –†–∞–∑—Ä–µ—à–∞–µ–º –Ω–∞—Ç–∏–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
    }, { passive: true });
});

// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
window.addEventListener('load', function() {
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Å–ª–æ—Ç–æ–≤
    const slotImages = [
        'images/slot1.jpeg',
        'images/slot2.jpg', 
        'images/slot3.gif'
    ];
    
    slotImages.forEach(src => {
        const img = new Image();
        img.src = src;
    });
});
